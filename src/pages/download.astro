---
import { AccountType } from '@blankstorm/api';
import Asset from '../components/Asset.astro';
import Main from '../layouts/Main.astro';
import { repositoryAPIRequest, type Release } from '../repository';
import { currentUser, formatNum } from '../utils';

const account = await currentUser(Astro.cookies);

let error: string | Error, releases: Release[];

try {
	releases = await repositoryAPIRequest('/releases');
} catch (err) {
	error = err;
}

const include_downloads = account.type != AccountType.ACCOUNT;
---

<Main title="Download" center {account}>
	<br /><br />
	{
		error ? (
			<span>
				<br />
				Failed to fetch the latest release.
			</span>
		) : releases[0].assets?.length == 0 ? (
			<span>
				<br />
				The latest release does not have any downloads.
			</span>
		) : (
			<div>
				{include_downloads && (
					<p>
						Lifetime downloads: {formatNum(releases.reduce((sum, release) => sum + release.assets.reduce((total, { download_count }) => total + download_count, 0), 0))}
					</p>
				)}
				<h4>Downloads {include_downloads && <span>({formatNum(releases[0].assets.reduce((total, { download_count }) => total + download_count, 0))} total)</span>}</h4>
				<p>
					{releases[0].assets?.map((asset: any) => (
						<Asset {asset} {include_downloads} />
					))}
				</p>
			</div>
		)
	}
</Main>
