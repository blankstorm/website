---
import Asset from '../components/Asset.astro';
import Main from '../layouts/Main.astro';
import { repositoryAPIRequest, type Release } from '../repository';
import { formatNum } from '../utils';

let error: string | Error, releases: Release[];

try {
	releases = await repositoryAPIRequest('/releases');
} catch (err) {
	error = err;
}
---

<Main title="Download" center>
	<br /><br />
	{
		error ? (
			<span>
				<br />
				Failed to fetch the latest release.
			</span>
		) : releases[0].assets?.length == 0 ? (
			<span>
				<br />
				The latest release does not have any downloads.
			</span>
		) : (
			<div>
				<p>Lifetime downloads: {formatNum(releases.reduce((sum, release) => release.assets.reduce((total, { download_count }) => total + download_count, 0), 0))}</p>
				<h4>Downloads ({formatNum(releases[0].assets.reduce((total, { download_count }) => total + download_count, 0))} total)</h4>
				<p>
					{releases[0].assets?.map((asset: any) => (
						<Asset {asset} />
					))}
				</p>
			</div>
		)
	}
</Main>
